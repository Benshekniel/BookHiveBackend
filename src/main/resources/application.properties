spring.application.name=BookHive
server.port=9090
#spring.security.user.name=user
#spring.security.user.password=1234
#server.servlet.session.cookie.same-site=strict

# PostgreSQL DB Configuration
spring.datasource.url=jdbc:postgresql://aws-0-eu-west-2.pooler.supabase.com:6543/postgres
spring.datasource.username=postgres.icifhbmtmtklzpusztnd
spring.datasource.password=BookHive2025

#spring.datasource.url=jdbc:postgresql://localhost:5432/BookHive
#spring.datasource.username=postgres
#spring.datasource.password=root

# Hibernate Settings
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Allow Hibernate to create/update schema automatically (use only for development)
spring.jpa.hibernate.ddl-auto=update

# Optional: make SQL visible during startup for debugging
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Logging
#logging.level.org.springframework=DEBUG
#logging.level.org.hibernate=DEBUG
#logging.level.service.organization=DEBUG
#logging.level.model.repo=DEBUG

# Change cache size if needed
spring.jpa.properties.hibernate.statement_cache.size=0
spring.datasource.hikari.data-source-properties.prepareThreshold=0

# Enable multipart uploads
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=215MB
spring.servlet.multipart.file-size-threshold=0
server.tomcat.max-file-count=20
test.property=loaded

# JPA vendor adapter configuration
spring.jpa.generate-ddl=false

# Flyway configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

# HikariCP settings
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=LokiAjKgf
spring.datasource.hikari.max-lifetime=540000

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=bookhive.lk@gmail.com
spring.mail.password=wqnu dlxe qxgl vxdl
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.default-encoding=UTF-8

# JWT
#jwt.secret=5ba99073f87b2239ff333b1fd60dfe56648ddf3ddbb1621e6bef53d7249aeab8

# HTTP Client Configuration
spring.http.client.factory=simple
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration

# Socket.IO Configuration for Real-time Messaging
socket.host=0.0.0.0
socket.port=9091

# CORS Configuration for Socket.IO and Frontend
cors.allowed.origins=http://localhost:3000,http://localhost:3001
spring.web.cors.allowed-origins=http://localhost:3000,http://localhost:3001
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# WebSocket Configuration
spring.websocket.heartbeat.time-to-first-heartbeat=10000
spring.websocket.heartbeat.heartbeat-interval=25000

# Additional Socket.IO Settings
socket.io.ping-timeout=60000
socket.io.ping-interval=25000
socket.io.upgrade-timeout=10000
socket.io.max-buffer-size=1048576

# Connection Pool Settings for Real-time Features
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.validation-timeout=5000

## Logging Configuration for Socket.IO
#logging.level.com.corundumstudio.socketio=INFO
#logging.level.service.SocketIOService=DEBUG